# Generated by Django 5.1.8 on 2025-04-22 10:48

from django.db import migrations


def update_treatment_prices(apps, schema_editor):
    """
    Actualiza los TreatmentProduct existentes con precios desde Product
    """
    TreatmentProduct = apps.get_model('farm', 'TreatmentProduct')
    Product = apps.get_model('farm', 'Product')

    for tp in TreatmentProduct.objects.all():
        try:
            product = Product.objects.get(id=tp.product_id)

            # Si el producto tiene precio, usarlo; si no, dejar en 0
            if product.price:
                tp.unit_price = product.price

                # Calcular precio total
                if tp.total_dose:
                    tp.total_price = tp.unit_price * tp.total_dose

                    # Calcular precio por hectárea
                    if tp.treatment.field and tp.treatment.field.area > 0:
                        tp.price_per_ha = tp.total_price / tp.treatment.field.area

            tp.save()
        except Exception:
            # Si hay algún error, continuar con el siguiente
            continue


def reverse_migration(apps, schema_editor):
    """
    Función para revertir la migración (deja los precios a null)
    """
    TreatmentProduct = apps.get_model('farm', 'TreatmentProduct')

    for tp in TreatmentProduct.objects.all():
        tp.unit_price = None
        tp.total_price = None
        tp.price_per_ha = None
        tp.save()


class Migration(migrations.Migration):
    dependencies = [
        ('farm', '0028_treatmentproduct_price_per_ha_and_more'),
    ]

    operations = [
        migrations.RunPython(update_treatment_prices, reverse_migration),
    ]
